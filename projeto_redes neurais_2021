{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled6.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNqvMGN/evrOJxwppQtUcgi",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/costagean/Redes_Neurais/blob/main/projeto_redes%20neurais_2021\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Un3M_PDuRb7Z"
      },
      "source": [
        "# bibliotecas que serão utilizadas\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.neural_network import MLPRegressor\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn import preprocessing\n",
        "from sklearn.metrics import r2_score \n",
        "from sklearn.externals import joblib\n",
        "from google.colab import files\n"
      ],
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tTtMb9nHVEpj"
      },
      "source": [
        "# para a originar um gráfico no browser\n",
        "%matplotlib inline"
      ],
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i-fUC3uRVVpM",
        "outputId": "71ec5a3d-eec3-43fb-ad37-f5cbaf87b8ea"
      },
      "source": [
        "# Para captação e leitura dos dados\n",
        "!git clone https://github.com/costagean/Redes_Neurais\n",
        "%cd Redes_Neurais"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'Redes_Neurais'...\n",
            "remote: Enumerating objects: 9, done.\u001b[K\n",
            "remote: Counting objects: 100% (9/9), done.\u001b[K\n",
            "remote: Compressing objects: 100% (9/9), done.\u001b[K\n",
            "remote: Total 9 (delta 2), reused 0 (delta 0), pack-reused 0\u001b[K\n",
            "Unpacking objects: 100% (9/9), done.\n",
            "/content/Redes_Neurais/Redes_Neurais/Redes_Neurais/Redes_Neurais/Redes_Neurais/Redes_Neurais/Redes_Neurais/Redes_Neurais/Redes_Neurais/Redes_Neurais\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uYkFVg_NVthN",
        "outputId": "c08d8d7c-f64e-49c5-8d68-c92ef463443b"
      },
      "source": [
        "# Para leitura dos dados\n",
        "df=pd.read_excel(\"dados para projeto de rede neural.xlsx\")\n",
        "print(df.head())\n"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "   Unnamed: 0                           Unnamed: 1  ... Unnamed: 7 Unnamed: 8\n",
            "0         NaN  Dados para confecção da rede neural  ...        NaN        NaN\n",
            "1         NaN                             Amostras  ...        EDF         EY\n",
            "2         NaN                                    B  ...          -          -\n",
            "3         NaN                                    1  ...    1.01565    62.2799\n",
            "4         NaN                                    2  ...   0.969925    59.5825\n",
            "\n",
            "[5 rows x 9 columns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R_BYsREMbEFr"
      },
      "source": [
        "filename = 'model_ANN.pkl'\n",
        "model = joblib.load(filename)\n"
      ],
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jVCw8b6WbWmD",
        "outputId": "a9e94d0c-87a3-40da-91f8-129e4c9780b1"
      },
      "source": [
        "# separando as colunas de interesse\n",
        "Index=[2,3,4,5,6,7,8]\n",
        "X=df.iloc[:,Index].copy()\n",
        "print(X.head())"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "  Unnamed: 2 Unnamed: 3 Unnamed: 4  ...   Unnamed: 6 Unnamed: 7 Unnamed: 8\n",
            "0        NaN        NaN        NaN  ...          NaN        NaN        NaN\n",
            "1       ղ(%)     CZ (%)     MV (%)  ...  PCS (MJ/kg)        EDF         EY\n",
            "2          -       3.25      75.33  ...      19.2927          -          -\n",
            "3      61.32       7.75      76.88  ...      19.5947    1.01565    62.2799\n",
            "4      61.43       0.14      83.95  ...      18.7125   0.969925    59.5825\n",
            "\n",
            "[5 rows x 7 columns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kC9tuyqJb77J"
      },
      "source": [
        ""
      ],
      "execution_count": 48,
      "outputs": []
    }
  ]
}